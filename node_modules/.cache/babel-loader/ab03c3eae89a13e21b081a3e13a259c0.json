{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react/cjs/react.development\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurChangeHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    valueChangeHandler,\n    inputBlurChangeHandler,\n    valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_9_Forms_Inputs/src/components/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurChangeHandler","reset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,6BAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,QAAMC,sBAAsB,GAAGH,KAAK,IAAI;AACtCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAChBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHM,IAAAA,KAAK,EAAET,YADJ;AAEHK,IAAAA,QAFG;AAGHC,IAAAA,kBAHG;AAIHI,IAAAA,sBAJG;AAKHN,IAAAA,YALG;AAMHO,IAAAA;AANG,GAAP;AASD,CA5BD;;GAAMb,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react/cjs/react.development\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n  const inputBlurChangeHandler = event => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n      setEnteredValue('');\r\n      setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n      value: enteredValue,\r\n      hasError,\r\n      valueChangeHandler,\r\n      inputBlurChangeHandler,\r\n      valueIsValid,\r\n      reset\r\n      \r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}