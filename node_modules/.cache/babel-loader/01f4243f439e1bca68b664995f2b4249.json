{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INT1342\\\\Documents\\\\DesarrolloWeb\\\\curso-react\\\\react_9_Forms_Inputs\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredNameisValid, setEnteredNameisValid] = useState(false);\n  console.log(\"enteredNameTouched: \" + enteredNameTouched);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameisValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const onBlurChangeHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      setEnteredNameisValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      setEnteredNameisValid(false);\n      return;\n    }\n\n    setEnteredNameisValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: onBlurChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"mxma/rd90hotc5kBpBrNaRg9yjw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_9_Forms_Inputs/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameisValid","setEnteredNameisValid","console","log","enteredNameIsValid","trim","nameInputIsInValid","nameInputClasses","formIsValid","nameInputChangeHandler","event","target","value","onBlurChangeHandler","formSubmissionHandler","preventDefault"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAA2BL,kBAAvC;AAEA,QAAMM,kBAAkB,GAAGR,WAAW,CAACS,IAAZ,OAAuB,EAAlD;AACA,QAAMC,kBAAkB,GAAG,CAACN,kBAAD,IAAuBF,kBAAlD;AACA,QAAMS,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;AAIA,MAAIE,WAAW,GAAG,KAAlB;;AAEA,MAAIJ,kBAAJ,EAAwB;AACtBI,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxCb,IAAAA,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAGH,KAAK,IAAI;AACnCX,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAI,CAACK,kBAAL,EAAyB;AACvBH,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;AACF,GAND;;AAQA,QAAMa,qBAAqB,GAAIJ,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACK,cAAN;AACAhB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAI,CAACK,kBAAL,EAAyB;AACvBH,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAZD;;AAeA,sBACE;AAAM,IAAA,QAAQ,EAAEe,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEP,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEX,WADT;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEa,sBAJZ;AAKE,QAAA,MAAM,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGP,kBAAkB,iBACjB;AAAG,QAAA,SAAS,EAAE,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlED;;GAAMd,W;;KAAAA,W;AAoEN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredNameisValid, setEnteredNameisValid] = useState(false);\n  \n  console.log(\"enteredNameTouched: \" +   enteredNameTouched);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameisValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  \n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const onBlurChangeHandler = event => {\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      setEnteredNameisValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      setEnteredNameisValid(false);\n      return;\n    }\n    setEnteredNameisValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  \n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={onBlurChangeHandler}\n        />\n        {nameInputIsInValid && (\n          <p className={\"error-text\"}>Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}