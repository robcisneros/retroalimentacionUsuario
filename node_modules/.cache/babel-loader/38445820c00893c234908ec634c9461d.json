{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === 'BLUR') {\n    return {\n      value: state.value,\n      isTouched: true\n    };\n  }\n\n  if (action.type === 'RESET') {\n    return {\n      value: '',\n      isTouched: false\n    };\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurChangeHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    hasError,\n    valueIsValid,\n    valueChangeHandler,\n    inputBlurChangeHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_9_Forms_Inputs/src/components/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurChangeHandler","reset"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAhB;AAAuBC,MAAAA,SAAS,EAAEE,KAAK,CAACF;AAAxC,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,WAAO;AAAEL,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAAf;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEL,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,SAAS,EAAE;AAAxB,KAAP;AACD;;AACD,SAAOC,iBAAP;AACD,CAXD;;AAaA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAzC;AAEA,QAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;AACA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBL,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAApC,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMe,sBAAsB,GAAGF,KAAK,IAAI;AACtCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMW,KAAK,GAAG,MAAM;AAClBP,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AACHL,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADf;AAEHW,IAAAA,QAFG;AAGHD,IAAAA,YAHG;AAIHE,IAAAA,kBAJG;AAKHG,IAAAA,sBALG;AAMHC,IAAAA;AANG,GAAP;AASD,CA1BD;;GAAMV,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n  value: '',\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  if (action.type === 'INPUT') {\r\n    return { value: action.value, isTouched: state.isTouched };\r\n  }\r\n  if (action.type === 'BLUR') {\r\n    return { value: state.value, isTouched: true };\r\n  }\r\n  if (action.type === 'RESET') {\r\n    return { value: '', isTouched: false };\r\n  }\r\n  return inputStateReducer;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({type: 'INPUT', value: event.target.value});\r\n  };\r\n  const inputBlurChangeHandler = event => {\r\n    dispatch({type: 'BLUR'});\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({type: 'RESET'});\r\n  };\r\n\r\n  return {\r\n      value: inputState.value,\r\n      hasError,\r\n      valueIsValid,\r\n      valueChangeHandler,\r\n      inputBlurChangeHandler,\r\n      reset\r\n      \r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}